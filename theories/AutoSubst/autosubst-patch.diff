diff --git a/theories/AutoSubst/Ast.v b/theories/AutoSubst/Ast.v
index 871157d..beeb725 100644
--- a/theories/AutoSubst/Ast.v
+++ b/theories/AutoSubst/Ast.v
@@ -1,6 +1,6 @@
-Require Import core unscoped.
-
-Require Import Setoid Morphisms Relation_Definitions.
+From LogRel.AutoSubst Require Import core unscoped.
+From LogRel Require Import BasicAst.
+From Coq Require Import Setoid Morphisms Relation_Definitions.
 
 
 Module Core.
@@ -1772,11 +1772,23 @@ exact (fun x => match x with
                 end).
 Qed.
 
+Lemma upAllfvRenL_term_term2 (p : nat -> Prop) (xi : nat -> nat) :
+  forall x,
+      upAllfv_term_term (upAllfv_term_term p) (upRen_term_term (upRen_term_term xi) x) ->
+      upAllfv_term_term (upAllfv_term_term (funcomp p xi)) x.
+Proof.
+   intros x.
+   refine (match x with S n' => fun H => upAllfvRenL_term_term p xi _ H | 0 => fun i => i end).
+Qed.
+
+
 Fixpoint allfvRenL_term (p_term : nat -> Prop) (xi_term : nat -> nat)
 (s : term) {struct s} :
 allfv_term p_term (ren_term xi_term s) ->
 allfv_term (funcomp p_term xi_term) s :=
-  match s with
+  match s as s return
+      allfv_term p_term (ren_term xi_term s) ->
+      allfv_term (funcomp p_term xi_term) s  with
   | tRel s0 => fun H => H
   | tSort s0 => fun H => conj I I
   | tProd s0 s1 =>
@@ -1999,7 +2011,7 @@ allfv_term (funcomp p_term xi_term) s :=
                             end
               end)
            (conj
-              (allfvImpl_term _ _ (upAllfvRenL_term_term p_term xi_term) s2
+              (allfvImpl_term _ _ (upAllfvRenL_term_term2 p_term xi_term) s2
                  (allfvRenL_term
                     (upAllfv_term_term (upAllfv_term_term p_term))
                     (upRen_term_term (upRen_term_term xi_term)) s2
@@ -2106,11 +2118,27 @@ exact (fun x => match x with
                 end).
 Qed.
 
+Lemma upAllfvRenR_term_term2 (p : nat -> Prop) (xi : nat -> nat) :
+  forall x,
+   upAllfv_term_term (upAllfv_term_term (funcomp p xi)) x ->
+   upAllfv_term_term (upAllfv_term_term p) (upRen_term_term (upRen_term_term xi) x).
+Proof.
+exact (fun x => match x with
+                | S n' => fun H => upAllfvRenR_term_term p xi _ H
+                | O => fun i => i
+                end).
+Qed.
+
+
 Fixpoint allfvRenR_term (p_term : nat -> Prop) (xi_term : nat -> nat)
 (s : term) {struct s} :
 allfv_term (funcomp p_term xi_term) s ->
 allfv_term p_term (ren_term xi_term s) :=
-  match s with
+  match s
+   return
+allfv_term (funcomp p_term xi_term) s ->
+allfv_term p_term (ren_term xi_term s)
+  with
   | tRel s0 => fun H => H
   | tSort s0 => fun H => conj I I
   | tProd s0 s1 =>
@@ -2337,7 +2365,7 @@ allfv_term p_term (ren_term xi_term s) :=
            (conj
               (allfvRenR_term (upAllfv_term_term (upAllfv_term_term p_term))
                  (upRen_term_term (upRen_term_term xi_term)) s2
-                 (allfvImpl_term _ _ (upAllfvRenR_term_term p_term xi_term)
+                 (allfvImpl_term _ _ (upAllfvRenR_term_term2 p_term xi_term)
                     s2
                     match H with
                     | conj _ H =>
@@ -2437,9 +2465,9 @@ Module Extra.
 
 Import Core.
 
-#[global]Hint Opaque subst_term: rewrite.
+#[export]Hint Opaque subst_term: rewrite.
 
-#[global]Hint Opaque ren_term: rewrite.
+#[export]Hint Opaque ren_term: rewrite.
 
 End Extra.
 
